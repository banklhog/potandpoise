from flask import Flask, request
from linebot import LineBotApi, WebhookHandler
from linebot.models import MessageEvent, TextMessage, TextSendMessage, ImageSendMessage
from linebot.exceptions import InvalidSignatureError
import random
from datetime import datetime, time, timedelta

app = Flask(__name__)

# üåê ‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡πÄ‡∏ä‡πá‡∏Ñ‡∏ß‡πà‡∏≤ Webhook URL ‡∏ó‡∏≥‡∏á‡∏≤‡∏ô‡∏´‡∏£‡∏∑‡∏≠‡∏¢‡∏±‡∏á
@app.route("/")
def index():
    print("üîî UptimeRobot ‡∏°‡∏≤‡πÄ‡∏Ñ‡∏≤‡∏∞‡πÅ‡∏•‡πâ‡∏ß")
    return "LINE Bot is running. ‚úÖ"

# üîê ‡πÉ‡∏™‡πà Token ‡∏Å‡∏±‡∏ö Secret ‡∏à‡∏≤‡∏Å LINE Developer Console
line_bot_api = LineBotApi('lniPvxeERBazet5yEFbLbahKQYKHJM3nvFFTcTtTH/fuS+RhqtDspYfHesEdAlfmTOme1Y0KGXlWCE46TJXV/4aaMp5c99qKCFyGni34oNgt5tatgYFmCa4QFHPxi1fa4x7nfv0hLIgOdpRadRY7EwdB04t89/1O/w1cDnyilFU=')
handler = WebhookHandler('5f745a4dfb4a605869d525db965bc9de')

# üé≤ ‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£‡∏™‡∏∏‡πà‡∏°‡∏Å‡∏£‡∏∞‡∏ñ‡∏≤‡∏á (‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏° + ‡∏£‡∏π‡∏õ)
pots_with_images = [
    ("üåø ‡∏Ñ‡∏∏‡∏ì‡πÑ‡∏î‡πâ‡∏Å‡∏£‡∏∞‡∏ñ‡∏≤‡∏á‡∏ó‡∏£‡∏á‡∏Å‡∏•‡∏° ‡∏™‡∏µ‡∏ô‡πâ‡∏≥‡∏ï‡∏≤‡∏•‡∏ô‡πà‡∏≤‡∏£‡∏±‡∏Å!", "https://i.postimg.cc/Y9q9GCp4/2024-12-16-7b231898a517f-1.webp"),
    ("üåµ ‡∏Å‡∏£‡∏∞‡∏ñ‡∏≤‡∏á‡∏•‡∏≤‡∏¢‡∏´‡∏¥‡∏ô‡∏ò‡∏£‡∏£‡∏°‡∏ä‡∏≤‡∏ï‡∏¥‡∏™‡∏∏‡∏î‡πÄ‡∏ó‡πà", "https://i.postimg.cc/Y9q9GCp4/2024-12-16-7b231898a517f-1.webp"),
    ("üå∏ ‡∏Å‡∏£‡∏∞‡∏ñ‡∏≤‡∏á‡∏ä‡∏°‡∏û‡∏π‡∏ü‡∏∏‡πâ‡∏á‡∏ü‡∏¥‡πâ‡∏á ‡∏´‡∏ß‡∏≤‡∏ô‡∏•‡∏∞‡∏°‡∏∏‡∏ô", "https://i.postimg.cc/1RbqTDmJ/Untitled.png"),
    # ... ‡πÄ‡∏û‡∏¥‡πà‡∏°‡∏†‡∏≤‡∏û‡∏ï‡∏≤‡∏°‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£‡∏ó‡∏µ‡πà‡∏°‡∏µ
]

# üïí ‡πÄ‡∏Å‡πá‡∏ö‡πÄ‡∏ß‡∏•‡∏≤‡∏ó‡∏µ‡πà‡∏ï‡∏≠‡∏ö‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏°‡∏≠‡∏±‡∏ï‡πÇ‡∏ô‡∏°‡∏±‡∏ï‡∏¥ (‡πÄ‡∏•‡∏¥‡∏Å‡∏á‡∏≤‡∏ô 30 ‡∏ô‡∏≤‡∏ó‡∏µ)
user_reply_time = {}
# üïí ‡πÄ‡∏Å‡πá‡∏ö‡∏ä‡πà‡∏ß‡∏á‡∏ó‡∏µ‡πà‡∏ï‡∏≠‡∏ö‡πÑ‡∏õ‡πÅ‡∏•‡πâ‡∏ß (‡πÄ‡∏ä‡πâ‡∏≤/‡∏ö‡πà‡∏≤‡∏¢)
user_reply_log = {}

def is_out_of_office():
    now = datetime.now().time()
    return (
        time(12, 0) <= now <= time(13, 0) or
        now >= time(20, 0) or
        now <= time(8, 0)
    )

def get_day_key():
    return datetime.now().strftime("%Y-%m-%d")

def get_time_period():
    now = datetime.now().time()
    if time(8, 0) <= now < time(12, 0):
        return "morning"
    elif time(13, 0) <= now < time(20, 0):
        return "afternoon"
    return None

# üì¨ Route ‡∏£‡∏±‡∏ö webhook ‡∏à‡∏≤‡∏Å LINE
@app.route("/webhook", methods=['POST'])
def callback():
    signature = request.headers['X-Line-Signature']
    body = request.get_data(as_text=True)
    print("‚úÖ LINE ‡∏™‡πà‡∏á webhook ‡∏°‡∏≤‡πÅ‡∏•‡πâ‡∏ß")
    try:
        handler.handle(body, signature)
    except InvalidSignatureError:
        print("‚ùå Invalid signature")
        return "Invalid signature", 400
    return 'OK'

# üì® ‡πÄ‡∏°‡∏∑‡πà‡∏≠‡∏°‡∏µ‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏°‡πÄ‡∏Ç‡πâ‡∏≤‡∏°‡∏≤
@handler.add(MessageEvent, message=TextMessage)
def handle_message(event):
    text = event.message.text.lower()
    user_id = event.source.user_id
    now = datetime.now()
    print("üì® ‡πÑ‡∏î‡πâ‡∏£‡∏±‡∏ö‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏°‡∏à‡∏≤‡∏Å‡∏ú‡∏π‡πâ‡πÉ‡∏ä‡πâ:", text)

    if "‡πÄ‡∏™‡∏µ‡πà‡∏¢‡∏á‡∏î‡∏ß‡∏á" in text:
        msg, image_url = random.choice(pots_with_images)
        line_bot_api.reply_message(
            event.reply_token,
            [
                TextSendMessage(text=msg),
                ImageSendMessage(
                    original_content_url=image_url,
                    preview_image_url=image_url
                )
            ]
        )
        return

    elif "‡∏ß‡∏¥‡∏ò‡∏µ‡∏™‡∏±‡πà‡∏á‡∏ã‡∏∑‡πâ‡∏≠" in text:
        return  # ‡∏õ‡∏•‡πà‡∏≠‡∏¢‡πÉ‡∏´‡πâ Auto-reply ‡∏ï‡∏≠‡∏ö

    elif is_out_of_office():
        last_reply_time = user_reply_time.get(user_id)
        if not last_reply_time or now - last_reply_time > timedelta(minutes=30):
            reply = (
                "‡∏Ç‡∏≠‡∏ö‡∏Ñ‡∏∏‡∏ì‡∏ó‡∏µ‡πà‡∏ó‡∏±‡∏Å‡∏°‡∏≤‡∏ô‡∏∞‡∏Ñ‡∏∞ üå±\n"
                "‡∏ï‡∏≠‡∏ô‡∏ô‡∏µ‡πâ‡πÅ‡∏≠‡∏î‡∏°‡∏¥‡∏ô‡∏≠‡∏≤‡∏à‡∏Å‡∏≥‡∏•‡∏±‡∏á‡∏£‡∏î‡∏ô‡πâ‡∏≥‡∏ï‡πâ‡∏ô‡πÑ‡∏°‡πâ‡∏≠‡∏¢‡∏π‡πà~ ‚òîÔ∏è\n"
                "‡πÄ‡∏î‡∏µ‡πã‡∏¢‡∏ß‡∏Å‡∏•‡∏±‡∏ö‡∏°‡∏≤‡∏ï‡∏≠‡∏ö‡πÑ‡∏ß ‡πÜ ‡πÄ‡∏•‡∏¢‡∏ô‡πâ‡∏≤‡∏≤‡∏≤ üí¨"
            )
            user_reply_time[user_id] = now
        else:
            return

    else:
        day_key = get_day_key()
        period = get_time_period()

        if period:
            if user_id not in user_reply_log:
                user_reply_log[user_id] = {}
            if user_reply_log[user_id].get(day_key) != period:
                reply = (
                   
                            "‡∏Ç‡∏≠‡∏ö‡∏Ñ‡∏∏‡∏ì‡∏ó‡∏µ‡πà‡πÅ‡∏ß‡∏∞‡∏°‡∏≤‡∏´‡∏≤ Pot & Poise ‡∏ô‡∏∞‡∏Ñ‡∏∞ üåø\n\n"
                            "‡∏ï‡∏≠‡∏ô‡∏ô‡∏µ‡πâ‡∏£‡πâ‡∏≤‡∏ô‡∏õ‡∏¥‡∏î‡∏ó‡∏≥‡∏Å‡∏≤‡∏£‡πÅ‡∏•‡πâ‡∏ß~ üåô\n"
                            "‡πÅ‡∏ï‡πà‡πÑ‡∏°‡πà‡∏ï‡πâ‡∏≠‡∏á‡∏´‡πà‡∏ß‡∏á‡∏Ñ‡πà‡∏∞ ‡πÅ‡∏≠‡∏î‡∏°‡∏¥‡∏ô‡∏à‡∏∞‡∏£‡∏µ‡∏ö‡∏°‡∏≤‡∏ï‡∏≠‡∏ö‡∏ó‡∏±‡∏ô‡∏ó‡∏µ‡πÄ‡∏°‡∏∑‡πà‡∏≠‡πÄ‡∏õ‡∏¥‡∏î‡∏£‡πâ‡∏≤‡∏ô‡∏ô‡∏∞ üí¨‚ú®\n\n"
                            "‡πÄ‡∏ß‡∏•‡∏≤‡∏ó‡∏≥‡∏Å‡∏≤‡∏£‡∏Ç‡∏≠‡∏á‡πÄ‡∏£‡∏≤:  \n"
                            "‡∏à‡∏±‡∏ô‡∏ó‡∏£‡πå‚Äì‡πÄ‡∏™‡∏≤‡∏£‡πå | 08:00‚Äì20:00 ‡∏ô.  \n"
                            "‡∏´‡∏¢‡∏∏‡∏î‡∏ó‡∏∏‡∏Å‡∏ß‡∏±‡∏ô‡∏≠‡∏≤‡∏ó‡∏¥‡∏ï‡∏¢‡πå (‡πÅ‡∏ï‡πà‡∏ï‡πâ‡∏ô‡πÑ‡∏°‡πâ‡∏¢‡∏±‡∏á‡∏Ñ‡∏¥‡∏î‡∏ñ‡∏∂‡∏á‡∏Ñ‡∏∏‡∏ì‡πÄ‡∏™‡∏°‡∏≠ üå±)\n\n"
                            "‡∏Ç‡∏≠‡∏ö‡∏Ñ‡∏∏‡∏ì‡∏ó‡∏µ‡πà‡∏≠‡∏î‡πÉ‡∏à‡∏£‡∏≠‡∏Ñ‡πà‡∏∞ üíö"
                        )

                user_reply_log[user_id][day_key] = period
            else:
                return
        else:
            return

    line_bot_api.reply_message(
        event.reply_token,
        TextSendMessage(text=reply)
    )

if __name__ == "__main__":
    app.run(host='0.0.0.0', port=8000)
